module: vyos_snmp_server
short_description: Manages snmp_server resource module
description: This module configures and manages the attributes of snmp_server on
  vyos platforms.
version_added: 2.7.0
author: Gomathi Selvi Srinivasan (@GomathiselviS)
notes:
- Tested against Arista vyos 1.1.8
- This module works with connection C(network_cli)
options:
  config:
    description: SNMP server configuration.
    type: dict
    suboptions:
      communities:
        description: Community name configuration.
        type: list
        elements: dict
        suboptions:
          name:
            description: Community name
            type: str
          client:
            description: IP address of SNMP client allowed to contact system
            type: str
          network:
            description: Subnet of SNMP client(s) allowed to contact system
            type: str
          authorization_type:
            description: Authorization type (rw or ro)
            type: str
            choices: ['ro', 'rw']
      contact:
        description: Person to contact about the system.
        type: str
      description:
        description: Description information
        type: str
      listen_address:
        description: IP address to listen for incoming SNMP requests
        type: dict
        suboptions:
          address:
            description: IP address to listen for incoming SNMP requests.
            type: str
          port:
            description: Port for SNMP service
            type: int
      location:
        description: Location information
        type: str
      smux_peer:
        description: Register a subtree for SMUX-based processing.
        type: str
      trap_source:
        description:  SNMP trap source address
        type: str
      trap_target:
        description: Address of trap target
        type: dict
        suboptions:
          address:
            description: Address of trap target
            type: str
          community:
            description: Community used when sending trap information
            type: str
          port:
            description: Destination port used for trap notification
            type: int
      v3:
        description: Simple Network Management Protocol (SNMP) v3
        type: dict
        suboptions:
          engineid:
            description: Specifies the EngineID as a hex value
            type: str
          groups:
            description: Specifies the group with name groupname
            type: list
            elements: dict
            suboptions:
              group:
                description: Specifies the group with name groupname
                type: str
              mode:
                description: Defines the read/write access
                type: str
                choices: ['ro', 'rw']
              seclevel:
                description: Defines security level
                type: str
                choices: ['auth', 'priv']
              view:
                description: Defines the name of view
                type: str
        trap_targets:
          description: Defines SNMP target for inform or traps for IP
          type: list
          elements: dict
          suboptions:
            address:
              description: IP/IPv6 address of trap target
              type: str
            auth:
              description: Defines the authentication
              type: dict
              suboptions:
                type:
                  description: Defines the protocol using for authentication
                  type: str
                  choices: ['md5', 'sha']
                encrypted_key:
                  description: Defines the encrypted password for authentication
                  type: str
                plaintext_key:
                  description: Defines the clear text password for authentication
                  type: str
            engineid:
              description: Defines the engineID.
              type: str
            port:
              description: Specifies the TCP/UDP port of a destination for SNMP traps/informs.
              type: int
            privacy:
              description: Defines the privacy
              type: dict
              suboptions:
                type:
                  description: Defines the protocol using for privacy
                  type: str
                  choices: ['des', 'aes']
                encrypted_key:
                  description: Defines the encrypted password for privacy
                  type: str
                plaintext_key:
                  description: Defines the clear text password for privacy
                  type: str
            protocol:
              description: Defines protocol for notification between TCP and UDP
              type: str
              choices: ['tcp', 'udp']
            type:
              description: Specifies the type of notification between inform and trap
              type: str
              choices: ['inform', 'trap']
            user:
              description: Defines username for authentication
              type: str
         tsm:
          description: Specifies that the snmpd uses encryption
          type: dict
          suboptions:
            local_key:
              description: Defines the server certificate fingerprint or key-file name.
              type: str
            port:
              description: Defines the port for tsm.
              type: int
          users:
            description: Defines username for authentication
            type: list
            elements: dict
            suboptions:
              user:
                description: Specifies the user with name username
                type: str
            auth:
              description: Defines the authentication
              type: dict
              suboptions:
                type:
                  description: Defines the protocol using for authentication
                  type: str
                  choices: ['md5', 'sha']
                encrypted_key:
                  description: Defines the encrypted password for authentication
                  type: str
                plaintext_key:
                  description: Defines the clear text password for authentication
                  type: str
            engineid:
              description: Defines the engineID.
              type: str
            group:
              description: Specifies group for user name
              type: str
            mode:
              description: Specifies the mode for access rights of user, read only or write
              type: str
              choices: ['ro', 'rw']
            privacy:
              description: Defines the privacy
              type: dict
              suboptions:
                type:
                  description: Defines the protocol using for privacy
                  type: str
                  choices: ['des', 'aes']
                encrypted_key:
                  description: Defines the encrypted password for privacy
                  type: str
                plaintext_key:
                  description: Defines the clear text password for privacy
                  type: str
            tsm_key:
              description: Specifies finger print or file name of TSM certificate.
              type: str
          views:
            desscription: Specifies the view with name viewname
            type: list
            elements: dict
            suboptions:
              view:
                description: view name
                type: str
              oid:
                description: Specify oid
                type: str
              exclude:
                description: Exclude is optional argument.
                type: bool
              mask:
                description: Defines a bit-mask that is indicating which subidentifiers of the associated subtree OID should be regarded as significant.
                type: str
  running_config:
    description:
    - This option is used only with state I(parsed).
    - The value of this option should be the output received from the vyos device by
      executing the command B("show configuration commands | grep snmp").
    - The state I(parsed) reads the configuration from C(running_config) option and
      transforms it into Ansible structured data as per the resource module's argspec
      and the value is then returned in the I(parsed) key within the result.
    type: str
  state:
    description:
    - The state the configuration should be left in.
    - The states I(replaced) and I(overridden) have identical
       behaviour for this module.
    - Please refer to examples for more details.
    type: str
    choices: [deleted, merged, overridden, replaced, gathered, rendered, parsed]
    default: merged
